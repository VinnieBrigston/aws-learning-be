service: product-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  profile: awsLearning
  httpApi:
    cors: true
  environment:
    SQS_URL:
      Ref: catalogItemsQueue
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:CreateTable
        - sqs:ReceiveMessage
        - sns:Publish
      Resource: '*'

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    createProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: createProductTopic
        Endpoint: theodoreksts@gmail.com
    createProductTopicSubscriptionFiltered:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: createProductTopic
        Endpoint: vinniebrixton@gmail.com
        FilterPolicy:
          title:
            - 'Laptop'

functions:
  getProducts:
    handler: handlers/getProducts.getProductsHandler
    events:
      - httpApi:
          path: /products
          method: get
  getProductById:
    handler: handlers/getProductById.getProductByIdHandler
    events:
      - httpApi:
          path: /product/{id}
          method: get
  createProduct:
    handler: handlers/createProduct.createProductHandler
    events:
      - httpApi:
          path: /products
          method: post
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.catalogBatchProcessHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ catalogItemsQueue, Arn ]
          batchSize: 5
