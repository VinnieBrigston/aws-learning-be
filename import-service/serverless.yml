service: import-service
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  profile: awsLearning
  environment:
    ACCOUNT_ID: ${env:ACCOUNT_ID}
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        functionArn: arn:aws:lambda:eu-west-1:${env:ACCOUNT_ID}:function:authorization-service-dev-basicAuthorizer

  iamRoleStatements:
    - Effect: Allow
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-js-learning-import-csv"
    - Effect: Allow
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-js-learning-import-csv/*"
    - Effect: Allow
      Action:
        - "sqs:SendMessage"
        - "sqs:SendMessageBatch"
        - "sqs:GetQueueUrl" 
      Resource: '*'
    - Effect: Allow
      Action:
        - "lambda:InvokeFunction"
      Resource: 
        - "arn:aws:lambda:eu-west-1:${env:ACCOUNT_ID}:function:authorization-service-dev-basicAuthorizer"

functions:
  importProductsFile:
    handler: handlers/importProductsFile.importProductsFileHandler
    events:
      - httpApi:
          path: /import
          method: get
          authorizer:
            name: basicAuthorizer
  importFileParser:
    handler: handlers/importFileParser.importFileParserHandler
    events:
      - s3:
          bucket: aws-js-learning-import-csv
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true